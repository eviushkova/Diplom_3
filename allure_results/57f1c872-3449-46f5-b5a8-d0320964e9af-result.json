{"name": "Проверка успешного создания заказа залогиненным пользователем", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_main_page.TestMainPage object at 0x1066ecdd0>, authorization = <pages.main_page.MainPage object at 0x106700bd0>\nmain_page = <pages.main_page.MainPage object at 0x106629ed0>\n\n    @allure.title(\"Проверка успешного создания заказа залогиненным пользователем\")\n    def test_order_creation_by_authorized_user(self, authorization, main_page):\n        main_page.drag_and_drop_ingredient_in_basket()\n        main_page.click_on_place_order_button()\n>       order_number = main_page.get_order_number()\n\ntests/test_main_page.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:64: in get_order_number\n    return self.get_new_element_value(MainPageLocators.ORDER_NUMBER)\npages/base_page.py:86: in get_new_element_value\n    WebDriverWait(self.driver, 15).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"57a505fa-db57-495c-98a9-dfda0bc0cbeb\")>\nmethod = <function BasePage.get_new_element_value.<locals>.<lambda> at 0x10702ade0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Перетащить ингредиент в корзину", "status": "passed", "start": 1726004342156, "stop": 1726004342706}, {"name": "Клик на кнопку 'Оформить заказ'", "status": "passed", "start": 1726004342706, "stop": 1726004342945}, {"name": "Получить номер заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/elena_viushkova/Documents/Practicum/Diplom_Elena_Viushkova_11/Diplom_3/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/elena_viushkova/Documents/Practicum/Diplom_Elena_Viushkova_11/Diplom_3/pages/main_page.py\", line 64, in get_order_number\n    return self.get_new_element_value(MainPageLocators.ORDER_NUMBER)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elena_viushkova/Documents/Practicum/Diplom_Elena_Viushkova_11/Diplom_3/pages/base_page.py\", line 86, in get_new_element_value\n    WebDriverWait(self.driver, 15).until(\n  File \"/Users/elena_viushkova/Documents/Practicum/Diplom_Elena_Viushkova_11/Diplom_3/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1726004342945, "stop": 1726004358271}], "attachments": [{"name": "log", "source": "442e7c7b-dab8-4c3a-a649-bb80f84e896b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1726004342156, "stop": 1726004358275, "uuid": "6626168f-173a-4d99-99b7-a9e844e35bfb", "historyId": "b10bc1c52024d3c557d99ce5a78bb992", "testCaseId": "7ba521a89ceb1bc78ff6682185e0804f", "fullName": "tests.test_main_page.TestMainPage#test_order_creation_by_authorized_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "Elenas-MacBook-Air.local"}, {"name": "thread", "value": "80340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}